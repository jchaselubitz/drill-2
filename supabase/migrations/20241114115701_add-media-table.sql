drop policy "Enable all for users based on user_id" on "public"."profiles";

revoke delete on table "public"."profiles" from "anon";

revoke insert on table "public"."profiles" from "anon";

revoke references on table "public"."profiles" from "anon";

revoke select on table "public"."profiles" from "anon";

revoke trigger on table "public"."profiles" from "anon";

revoke truncate on table "public"."profiles" from "anon";

revoke update on table "public"."profiles" from "anon";

revoke delete on table "public"."profiles" from "authenticated";

revoke insert on table "public"."profiles" from "authenticated";

revoke references on table "public"."profiles" from "authenticated";

revoke select on table "public"."profiles" from "authenticated";

revoke trigger on table "public"."profiles" from "authenticated";

revoke truncate on table "public"."profiles" from "authenticated";

revoke update on table "public"."profiles" from "authenticated";

revoke delete on table "public"."profiles" from "service_role";

revoke insert on table "public"."profiles" from "service_role";

revoke references on table "public"."profiles" from "service_role";

revoke select on table "public"."profiles" from "service_role";

revoke trigger on table "public"."profiles" from "service_role";

revoke truncate on table "public"."profiles" from "service_role";

revoke update on table "public"."profiles" from "service_role";

alter table "public"."lesson" drop constraint "lessons_subject_id_fkey";

alter table "public"."profiles" drop constraint "profiles_user_id_fkey";

alter table "public"."profiles" drop constraint "profiles_user_id_key";

drop function if exists "public"."create_profile"();

alter table "public"."profiles" drop constraint "profiles_pkey";

drop index if exists "public"."profiles_pkey";

drop index if exists "public"."profiles_user_id_key";

drop table "public"."profiles";

create table "public"."media" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "title" text,
    "description" text,
    "media_url" text not null,
    "website_url" text,
    "image_url" text
);


alter table "public"."media" enable row level security;

create table "public"."user_media" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "profile_id" uuid,
    "media_id" bigint
);


alter table "public"."user_media" enable row level security;

CREATE UNIQUE INDEX media_pkey ON public.media USING btree (id);

CREATE UNIQUE INDEX user_media_pkey ON public.user_media USING btree (id);

alter table "public"."media" add constraint "media_pkey" PRIMARY KEY using index "media_pkey";

alter table "public"."user_media" add constraint "user_media_pkey" PRIMARY KEY using index "user_media_pkey";

alter table "public"."lesson" add constraint "lesson_subject_id_fkey" FOREIGN KEY (subject_id) REFERENCES subject(id) ON DELETE CASCADE not valid;

alter table "public"."lesson" validate constraint "lesson_subject_id_fkey";

alter table "public"."user_media" add constraint "user_media_media_id_fkey" FOREIGN KEY (media_id) REFERENCES media(id) ON DELETE CASCADE not valid;

alter table "public"."user_media" validate constraint "user_media_media_id_fkey";

alter table "public"."user_media" add constraint "user_media_profile_id_fkey" FOREIGN KEY (profile_id) REFERENCES profile(id) ON DELETE CASCADE not valid;

alter table "public"."user_media" validate constraint "user_media_profile_id_fkey";

grant delete on table "public"."media" to "anon";

grant insert on table "public"."media" to "anon";

grant references on table "public"."media" to "anon";

grant select on table "public"."media" to "anon";

grant trigger on table "public"."media" to "anon";

grant truncate on table "public"."media" to "anon";

grant update on table "public"."media" to "anon";

grant delete on table "public"."media" to "authenticated";

grant insert on table "public"."media" to "authenticated";

grant references on table "public"."media" to "authenticated";

grant select on table "public"."media" to "authenticated";

grant trigger on table "public"."media" to "authenticated";

grant truncate on table "public"."media" to "authenticated";

grant update on table "public"."media" to "authenticated";

grant delete on table "public"."media" to "service_role";

grant insert on table "public"."media" to "service_role";

grant references on table "public"."media" to "service_role";

grant select on table "public"."media" to "service_role";

grant trigger on table "public"."media" to "service_role";

grant truncate on table "public"."media" to "service_role";

grant update on table "public"."media" to "service_role";

grant delete on table "public"."user_media" to "anon";

grant insert on table "public"."user_media" to "anon";

grant references on table "public"."user_media" to "anon";

grant select on table "public"."user_media" to "anon";

grant trigger on table "public"."user_media" to "anon";

grant truncate on table "public"."user_media" to "anon";

grant update on table "public"."user_media" to "anon";

grant delete on table "public"."user_media" to "authenticated";

grant insert on table "public"."user_media" to "authenticated";

grant references on table "public"."user_media" to "authenticated";

grant select on table "public"."user_media" to "authenticated";

grant trigger on table "public"."user_media" to "authenticated";

grant truncate on table "public"."user_media" to "authenticated";

grant update on table "public"."user_media" to "authenticated";

grant delete on table "public"."user_media" to "service_role";

grant insert on table "public"."user_media" to "service_role";

grant references on table "public"."user_media" to "service_role";

grant select on table "public"."user_media" to "service_role";

grant trigger on table "public"."user_media" to "service_role";

grant truncate on table "public"."user_media" to "service_role";

grant update on table "public"."user_media" to "service_role";


