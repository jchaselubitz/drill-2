create type "public"."iso_639_language_code" as enum ('aa', 'ab', 'ae', 'af', 'ak', 'am', 'an', 'ar', 'as', 'av', 'ay', 'az', 'ba', 'be', 'bg', 'bh', 'bi', 'bm', 'bn', 'bo', 'br', 'bs', 'ca', 'ce', 'ch', 'co', 'cr', 'cs', 'cu', 'cv', 'cy', 'da', 'de', 'dv', 'dz', 'ee', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'ff', 'fi', 'fj', 'fo', 'fr', 'fy', 'ga', 'gd', 'gl', 'gn', 'gu', 'gv', 'ha', 'he', 'hi', 'ho', 'hr', 'ht', 'hu', 'hy', 'hz', 'ia', 'id', 'ie', 'ig', 'ii', 'ik', 'io', 'is', 'it', 'iu', 'ja', 'jv', 'ka', 'kg', 'ki', 'kj', 'kk', 'kl', 'km', 'kn', 'ko', 'kr', 'ks', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lg', 'li', 'ln', 'lo', 'lt', 'lu', 'lv', 'mg', 'mh', 'mi', 'mk', 'ml', 'mn', 'mr', 'ms', 'mt', 'my', 'na', 'nb', 'nd', 'ne', 'ng', 'nl', 'nn', 'no', 'nr', 'nv', 'ny', 'oc', 'oj', 'om', 'or', 'os', 'pa', 'pi', 'pl', 'ps', 'pt', 'qu', 'rm', 'rn', 'ro', 'ru', 'rw', 'sa', 'sc', 'sd', 'se', 'sg', 'si', 'sk', 'sl', 'sm', 'sn', 'so', 'sq', 'sr', 'ss', 'st', 'su', 'sv', 'sw', 'ta', 'te', 'tg', 'th', 'ti', 'tk', 'tl', 'tn', 'to', 'tr', 'ts', 'tt', 'tw', 'ty', 'ug', 'uk', 'ur', 'uz', 've', 'vi', 'vo', 'wa', 'wo', 'xh', 'yi', 'yo', 'za', 'zh', 'zu');
create table "public"."phrases" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid default auth.uid(),
    "created_at" timestamp with time zone not null default now(),
    "text" text,
    "lang" iso_639_language_code,
    "source" text
);
alter table "public"."phrases" enable row level security;
create table "public"."recordings" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid default auth.uid(),
    "created_at" timestamp with time zone not null default now(),
    "filename" text,
    "transcript" text,
    "lang" iso_639_language_code
);
alter table "public"."recordings" enable row level security;
create table "public"."words" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid default auth.uid(),
    "created_at" timestamp with time zone not null default now(),
    "text" text,
    "lang" iso_639_language_code,
    "part_speech" text,
    "source" text
);
alter table "public"."words" enable row level security;
CREATE UNIQUE INDEX phrases_pkey ON public.phrases USING btree (id);
CREATE UNIQUE INDEX recordings_pkey ON public.recordings USING btree (id);
CREATE UNIQUE INDEX words_pkey ON public.words USING btree (id);
alter table "public"."phrases" add constraint "phrases_pkey" PRIMARY KEY using index "phrases_pkey";
alter table "public"."recordings" add constraint "recordings_pkey" PRIMARY KEY using index "recordings_pkey";
alter table "public"."words" add constraint "words_pkey" PRIMARY KEY using index "words_pkey";
grant delete on table "public"."phrases" to "anon";
grant insert on table "public"."phrases" to "anon";
grant references on table "public"."phrases" to "anon";
grant select on table "public"."phrases" to "anon";
grant trigger on table "public"."phrases" to "anon";
grant truncate on table "public"."phrases" to "anon";
grant update on table "public"."phrases" to "anon";
grant delete on table "public"."phrases" to "authenticated";
grant insert on table "public"."phrases" to "authenticated";
grant references on table "public"."phrases" to "authenticated";
grant select on table "public"."phrases" to "authenticated";
grant trigger on table "public"."phrases" to "authenticated";
grant truncate on table "public"."phrases" to "authenticated";
grant update on table "public"."phrases" to "authenticated";
grant delete on table "public"."phrases" to "service_role";
grant insert on table "public"."phrases" to "service_role";
grant references on table "public"."phrases" to "service_role";
grant select on table "public"."phrases" to "service_role";
grant trigger on table "public"."phrases" to "service_role";
grant truncate on table "public"."phrases" to "service_role";
grant update on table "public"."phrases" to "service_role";
grant delete on table "public"."recordings" to "anon";
grant insert on table "public"."recordings" to "anon";
grant references on table "public"."recordings" to "anon";
grant select on table "public"."recordings" to "anon";
grant trigger on table "public"."recordings" to "anon";
grant truncate on table "public"."recordings" to "anon";
grant update on table "public"."recordings" to "anon";
grant delete on table "public"."recordings" to "authenticated";
grant insert on table "public"."recordings" to "authenticated";
grant references on table "public"."recordings" to "authenticated";
grant select on table "public"."recordings" to "authenticated";
grant trigger on table "public"."recordings" to "authenticated";
grant truncate on table "public"."recordings" to "authenticated";
grant update on table "public"."recordings" to "authenticated";
grant delete on table "public"."recordings" to "service_role";
grant insert on table "public"."recordings" to "service_role";
grant references on table "public"."recordings" to "service_role";
grant select on table "public"."recordings" to "service_role";
grant trigger on table "public"."recordings" to "service_role";
grant truncate on table "public"."recordings" to "service_role";
grant update on table "public"."recordings" to "service_role";
grant delete on table "public"."words" to "anon";
grant insert on table "public"."words" to "anon";
grant references on table "public"."words" to "anon";
grant select on table "public"."words" to "anon";
grant trigger on table "public"."words" to "anon";
grant truncate on table "public"."words" to "anon";
grant update on table "public"."words" to "anon";
grant delete on table "public"."words" to "authenticated";
grant insert on table "public"."words" to "authenticated";
grant references on table "public"."words" to "authenticated";
grant select on table "public"."words" to "authenticated";
grant trigger on table "public"."words" to "authenticated";
grant truncate on table "public"."words" to "authenticated";
grant update on table "public"."words" to "authenticated";
grant delete on table "public"."words" to "service_role";
grant insert on table "public"."words" to "service_role";
grant references on table "public"."words" to "service_role";
grant select on table "public"."words" to "service_role";
grant trigger on table "public"."words" to "service_role";
grant truncate on table "public"."words" to "service_role";
grant update on table "public"."words" to "service_role";
create policy "Enable delete for users based on user_id"
on "public"."phrases"
as permissive
for all
to public
using ((auth.uid() = user_id))
with check ((auth.uid() = user_id));
create policy "Enable ALL for users based on user_id"
on "public"."recordings"
as permissive
for all
to public
using ((auth.uid() = user_id))
with check ((auth.uid() = user_id));
create policy "Enable ALL for users based on user_id"
on "public"."words"
as permissive
for all
to public
using ((auth.uid() = user_id))
with check ((auth.uid() = user_id));
